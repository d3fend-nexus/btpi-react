version: '3.8'

services:
  # Database for Kasm
  kasm-db:
    image: postgres:14-alpine
    container_name: kasm-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: kasm
      POSTGRES_USER: kasm
      POSTGRES_PASSWORD: ${KASM_DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - /home/cmndcntrl/code/btpi-react/data/kasm/postgres:/var/lib/postgresql/data
      - /home/cmndcntrl/code/btpi-react/config/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - btpi-infra-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kasm"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Redis for Kasm
  kasm-redis:
    image: redis:7-alpine
    container_name: kasm-redis
    restart: unless-stopped
    command: redis-server --requirepass ${KASM_REDIS_PASSWORD}
    volumes:
      - /home/cmndcntrl/code/btpi-react/data/kasm/redis:/data
    networks:
      - btpi-infra-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kasm API Server
  kasm-api:
    image: kasmweb/api:1.17.0
    container_name: kasm-api
    restart: unless-stopped
    environment:
      KASM_DB_HOST: kasm-db
      KASM_DB_PORT: 5432
      KASM_DB_NAME: kasm
      KASM_DB_USER: kasm
      KASM_DB_PASSWORD: ${KASM_DB_PASSWORD}
      KASM_REDIS_HOST: kasm-redis
      KASM_REDIS_PORT: 6379
      KASM_REDIS_PASSWORD: ${KASM_REDIS_PASSWORD}
      KASM_API_TOKEN: ${KASM_API_TOKEN}
      KASM_MANAGER_TOKEN: ${KASM_MANAGER_TOKEN}
    volumes:
      - /home/cmndcntrl/code/btpi-react/data/kasm/api:/opt/kasm/current/log
    depends_on:
      kasm-db:
        condition: service_healthy
      kasm-redis:
        condition: service_healthy
    networks:
      - btpi-infra-network
      - btpi-proxy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Kasm Manager
  kasm-manager:
    image: kasmweb/manager:1.17.0
    container_name: kasm-manager
    restart: unless-stopped
    environment:
      KASM_API_HOST: kasm-api
      KASM_API_PORT: 8080
      KASM_API_TOKEN: ${KASM_API_TOKEN}
      KASM_MANAGER_TOKEN: ${KASM_MANAGER_TOKEN}
      KASM_ADMIN_EMAIL: btpi-nexus@btpi.local
      KASM_ADMIN_PASSWORD: ${KASM_ADMIN_PASSWORD}
      KASM_USER_PASSWORD: ${KASM_ADMIN_PASSWORD}
    volumes:
      - /home/cmndcntrl/code/btpi-react/data/kasm/manager:/opt/kasm/current/log
      - /home/cmndcntrl/code/btpi-react/config/kasm:/opt/kasm/current/conf:ro
    depends_on:
      kasm-api:
        condition: service_healthy
    networks:
      - btpi-infra-network
      - btpi-proxy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Kasm Agent with REMnux support
  kasm-agent:
    image: kasmweb/agent:1.17.0
    container_name: kasm-agent
    restart: unless-stopped
    privileged: true
    environment:
      KASM_API_HOST: kasm-api
      KASM_API_PORT: 8080
      KASM_API_TOKEN: ${KASM_API_TOKEN}
      KASM_AGENT_HOSTNAME: kasm-agent-01
      DOCKER_HOST: unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/cmndcntrl/code/btpi-react/data/kasm/agent:/opt/kasm/current/log
      - /home/cmndcntrl/code/btpi-react/data/kasm/workspaces:/opt/kasm/current/workspaces
      - /home/cmndcntrl/code/btpi-react/config/kasm:/opt/kasm/current/conf:ro
    depends_on:
      kasm-api:
        condition: service_healthy
    networks:
      - btpi-infra-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx Proxy for Kasm
  kasm-proxy:
    image: nginx:alpine
    container_name: kasm-proxy
    restart: unless-stopped
    ports:
      - "6443:443"
      - "6080:80"
    volumes:
      - /home/cmndcntrl/code/btpi-react/config/nginx/kasm.conf:/etc/nginx/conf.d/default.conf:ro
      - /home/cmndcntrl/code/btpi-react/config/certificates/btpi.crt:/etc/nginx/ssl/btpi.crt:ro
      - /home/cmndcntrl/code/btpi-react/config/certificates/btpi.key:/etc/nginx/ssl/btpi.key:ro
      - /home/cmndcntrl/code/btpi-react/data/kasm/static:/opt/kasm/current/static:ro
      - /home/cmndcntrl/code/btpi-react/data/kasm/downloads:/opt/kasm/current/downloads:ro
    depends_on:
      kasm-api:
        condition: service_healthy
      kasm-manager:
        condition: service_healthy
    networks:
      - btpi-proxy-network
      - btpi-infra-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 5

  # REMnux Desktop for Security Analysis
  remnux-desktop:
    image: kasmweb/remnux-focal-desktop:1.16.0-rolling-weekly
    container_name: remnux-desktop
    restart: unless-stopped
    ports:
      - "6901:6901"
    environment:
      VNC_PW: ${KASM_ADMIN_PASSWORD}
      USER: "btpi-nexus"
      PASSWORD: ${KASM_ADMIN_PASSWORD}
      KASM_VNC_HTTP: "1"
      KASM_PORT: "6901"
    volumes:
      - /home/cmndcntrl/code/btpi-react/data/remnux:/home/kasm-user/Desktop/shared:rw
    networks:
      - btpi-infra-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6901/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # MISP Database
  misp-db:
    image: mariadb:10.11 # IP-OK - Docker image version tag, not an IP address
    container_name: misp-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MISP_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: misp
      MYSQL_USER: misp
      MYSQL_PASSWORD: ${MISP_DB_PASSWORD}
    volumes:
      - /home/cmndcntrl/code/btpi-react/data/misp/mysql:/var/lib/mysql
    networks:
      - btpi-infra-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MISP_DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MISP Redis
  misp-redis:
    image: redis:7-alpine
    container_name: misp-redis
    restart: unless-stopped
    command: redis-server --requirepass ${MISP_REDIS_PASSWORD}
    volumes:
      - /home/cmndcntrl/code/btpi-react/data/misp/redis:/data
    networks:
      - btpi-infra-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MISP Core Application
  misp-core:
    image: ghcr.io/misp/misp-docker/misp-core:latest
    container_name: misp-core
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    environment:
      MYSQL_HOST: misp-db
      MYSQL_USER: misp
      MYSQL_PASSWORD: ${MISP_DB_PASSWORD}
      MYSQL_DATABASE: misp
      MISP_MODULES_FQDN: http://misp-modules
      WORKERS: 1
      NUM_WORKERS_DEFAULT: 2
      NUM_WORKERS_PRIO: 2
      NUM_WORKERS_EMAIL: 2
      NUM_WORKERS_UPDATE: 1
      NUM_WORKERS_CACHE: 2
      BASE_URL: https://${DOMAIN_NAME}:8443
      DISABLE_IPV6: "true"
      ENABLE_DB_SETTINGS: "false"
    volumes:
      - /home/cmndcntrl/code/btpi-react/data/misp/files:/var/www/MISP/app/files
      - /home/cmndcntrl/code/btpi-react/data/misp/logs:/var/www/MISP/app/tmp/logs
      - /home/cmndcntrl/code/btpi-react/data/misp/config:/var/www/MISP/app/Config
      - /home/cmndcntrl/code/btpi-react/config/misp/ssl:/etc/nginx/certs
      - /home/cmndcntrl/code/btpi-react/data/misp/gnupg:/var/www/MISP/.gnupg
    depends_on:
      misp-db:
        condition: service_healthy
      misp-redis:
        condition: service_healthy
    networks:
      - btpi-infra-network
      - btpi-proxy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/users/login"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 120s

  # MISP Modules
  misp-modules:
    image: ghcr.io/misp/misp-docker/misp-modules:latest
    container_name: misp-modules
    restart: unless-stopped
    environment:
      REDIS_BACKEND: misp-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${MISP_REDIS_PASSWORD}
    depends_on:
      misp-redis:
        condition: service_healthy
    networks:
      - btpi-infra-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6666/modules"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  btpi-core-network:
    external: true
    name: btpi-core-network
  btpi-wazuh-network:
    external: true
    name: btpi-wazuh-network
  btpi-infra-network:
    external: true
    name: btpi-infra-network
  btpi-proxy-network:
    external: true
    name: btpi-proxy-network

volumes:
  kasm-postgres:
  kasm-redis:
  kasm-api:
  kasm-manager:
  kasm-agent:
  misp-mysql:
  misp-redis:
  misp-files:
